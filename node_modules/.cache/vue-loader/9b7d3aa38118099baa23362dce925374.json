{"remainingRequest":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\src\\components\\modals\\Modals.vue?vue&type=template&id=16a552ef&scoped=true&","dependencies":[{"path":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\src\\components\\modals\\Modals.vue","mtime":1585101964000},{"path":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\ACodingPGT\\KodeHive\\bahan\\mdbvuepro\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxtZGItY29udGFpbmVyPgogIDwhLS1TZWN0aW9uOiBNb2RhbHMtLT4KICA8c2VjdGlvbj4KICAgIDwhLS0gRnJhbWUgTW9kYWwgVG9wIEluZm8tLT4KICAgIDxtZGItbW9kYWwKICAgICAgZnJhbWUKICAgICAgcG9zaXRpb249InRvcCIKICAgICAgOnNob3c9InNob3dNb2RhbCIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwgPSBmYWxzZSIKICAgID4KICAgICAgPG1kYi1tb2RhbC1ib2R5IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgPHNwYW4KICAgICAgICAgID5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gSW1wZWRpdAogICAgICAgICAgbmlzaSBxdW8gcHJvdmlkZW50IGZ1Z2lhdCByZXByZWhlbmRlcml0IG5vc3RydW0gcXVvcy4uLjwvc3BhbgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0ic2Vjb25kYXJ5IiBAY2xpY2submF0aXZlPSJzaG93TW9kYWwgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgPC9tZGItbW9kYWw+CiAgICA8IS0tIEZyYW1lIE1vZGFsIEJvdHRvbSBTdWNjZXNzLS0+CgogICAgPCEtLSBGcmFtZSBNb2RhbCBCb3R0b20gU3VjY2Vzcy0tPgogICAgPG1kYi1tb2RhbAogICAgICBmcmFtZQogICAgICBwb3NpdGlvbj0iYm90dG9tIgogICAgICA6c2hvdz0ic2hvd01vZGFsMiIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwyID0gZmFsc2UiCiAgICA+CiAgICAgIDxtZGItbW9kYWwtYm9keSBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgIDxzcGFuCiAgICAgICAgICA+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEltcGVkaXQKICAgICAgICAgIG5pc2kgcXVvIHByb3ZpZGVudCBmdWdpYXQgcmVwcmVoZW5kZXJpdCBub3N0cnVtIHF1b3MuLi48L3NwYW4KICAgICAgICA+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InNlY29uZGFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMiA9IGZhbHNlIgogICAgICAgICAgPkNsb3NlPC9tZGItYnRuCiAgICAgICAgPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5Ij5TYXZlIGNoYW5nZXM8L21kYi1idG4+CiAgICAgIDwvbWRiLW1vZGFsLWJvZHk+CiAgICA8L21kYi1tb2RhbD4KICAgIDwhLS0gRnJhbWUgTW9kYWwgQm90dG9tIFN1Y2Nlc3MtLT4KCiAgICA8IS0tIFNpZGUgTW9kYWwgVG9wIFJpZ2h0IFN1Y2Nlc3MtLT4KICAgIDxtZGItbW9kYWwKICAgICAgcmVtb3ZlQmFja2Ryb3AKICAgICAgc2lkZQogICAgICBwb3NpdGlvbj0idG9wLXJpZ2h0IgogICAgICA6c2hvdz0ic2hvd01vZGFsMyIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwzID0gZmFsc2UiCiAgICA+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InNlY29uZGFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMyA9IGZhbHNlIgogICAgICAgICAgPkNsb3NlPC9tZGItYnRuCiAgICAgICAgPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5Ij5TYXZlIGNoYW5nZXM8L21kYi1idG4+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgogICAgPCEtLSBTaWRlIE1vZGFsIFRvcCBSaWdodCBTdWNjZXNzLS0+CgogICAgPCEtLSBTaWRlIE1vZGFsIFRvcCBMZWZ0IEluZm8tLT4KICAgIDxtZGItbW9kYWwKICAgICAgcmVtb3ZlQmFja2Ryb3AKICAgICAgc2lkZQogICAgICBwb3NpdGlvbj0idG9wLWxlZnQiCiAgICAgIDpzaG93PSJzaG93TW9kYWw0IgogICAgICBAY2xvc2U9InNob3dNb2RhbDQgPSBmYWxzZSIKICAgID4KICAgICAgPG1kYi1tb2RhbC1oZWFkZXI+CiAgICAgICAgPG1kYi1tb2RhbC10aXRsZT5Nb2RhbCB0aXRsZTwvbWRiLW1vZGFsLXRpdGxlPgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDxtZGItbW9kYWwtYm9keT4uLi48L21kYi1tb2RhbC1ib2R5PgogICAgICA8bWRiLW1vZGFsLWZvb3Rlcj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0ic2Vjb25kYXJ5IiBAY2xpY2submF0aXZlPSJzaG93TW9kYWw0ID0gZmFsc2UiCiAgICAgICAgICA+Q2xvc2U8L21kYi1idG4KICAgICAgICA+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiPlNhdmUgY2hhbmdlczwvbWRiLWJ0bj4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgPC9tZGItbW9kYWw+CiAgICA8IS0tIFNpZGUgTW9kYWwgVG9wIExlZnQgSW5mby0tPgoKICAgIDwhLS0gU2lkZSBNb2RhbCBCb3R0b20gUmlnaHQgRGFuZ2VyLS0+CiAgICA8bWRiLW1vZGFsCiAgICAgIHJlbW92ZUJhY2tkcm9wCiAgICAgIHNpZGUKICAgICAgcG9zaXRpb249ImJvdHRvbS1yaWdodCIKICAgICAgOnNob3c9InNob3dNb2RhbDUiCiAgICAgIEBjbG9zZT0ic2hvd01vZGFsNSA9IGZhbHNlIgogICAgPgogICAgICA8bWRiLW1vZGFsLWhlYWRlcj4KICAgICAgICA8bWRiLW1vZGFsLXRpdGxlPk1vZGFsIHRpdGxlPC9tZGItbW9kYWwtdGl0bGU+CiAgICAgIDwvbWRiLW1vZGFsLWhlYWRlcj4KICAgICAgPG1kYi1tb2RhbC1ib2R5Pi4uLjwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJzZWNvbmRhcnkiIEBjbGljay5uYXRpdmU9InNob3dNb2RhbDUgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KICAgIDwhLS0gU2lkZSBNb2RhbCBCb3R0b20gUmlnaHQgRGFuZ2VyLS0+CgogICAgPCEtLSBTaWRlIE1vZGFsIEJvdHRvbSBMZWZ0IFdhcm5pbmctLT4KICAgIDxtZGItbW9kYWwKICAgICAgcmVtb3ZlQmFja2Ryb3AKICAgICAgc2lkZQogICAgICBwb3NpdGlvbj0iYm90dG9tLWxlZnQiCiAgICAgIDpzaG93PSJzaG93TW9kYWw2IgogICAgICBAY2xvc2U9InNob3dNb2RhbDYgPSBmYWxzZSIKICAgID4KICAgICAgPG1kYi1tb2RhbC1oZWFkZXI+CiAgICAgICAgPG1kYi1tb2RhbC10aXRsZT5Nb2RhbCB0aXRsZTwvbWRiLW1vZGFsLXRpdGxlPgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDxtZGItbW9kYWwtYm9keT4uLi48L21kYi1tb2RhbC1ib2R5PgogICAgICA8bWRiLW1vZGFsLWZvb3Rlcj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0ic2Vjb25kYXJ5IiBAY2xpY2submF0aXZlPSJzaG93TW9kYWw2ID0gZmFsc2UiCiAgICAgICAgICA+Q2xvc2U8L21kYi1idG4KICAgICAgICA+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiPlNhdmUgY2hhbmdlczwvbWRiLWJ0bj4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgPC9tZGItbW9kYWw+CiAgICA8IS0tIFNpZGUgTW9kYWwgQm90dG9tIExlZnQgV2FybmluZy0tPgoKICAgIDxtZGItbW9kYWwgc2l6ZT0ic20iIDpzaG93PSJzaG93TW9kYWw3IiBAY2xvc2U9InNob3dNb2RhbDcgPSBmYWxzZSI+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4KICAgICAgICAgIGNvbG9yPSJzZWNvbmRhcnkiCiAgICAgICAgICBzaXplPSJzbSIKICAgICAgICAgIEBjbGljay5uYXRpdmU9InNob3dNb2RhbDcgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSIgc2l6ZT0ic20iPlNhdmUgY2hhbmdlczwvbWRiLWJ0bj4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgPC9tZGItbW9kYWw+CgogICAgPG1kYi1tb2RhbCA6c2hvdz0ic2hvd01vZGFsOCIgQGNsb3NlPSJzaG93TW9kYWw4ID0gZmFsc2UiPgogICAgICA8bWRiLW1vZGFsLWhlYWRlcj4KICAgICAgICA8bWRiLW1vZGFsLXRpdGxlPk1vZGFsIHRpdGxlPC9tZGItbW9kYWwtdGl0bGU+CiAgICAgIDwvbWRiLW1vZGFsLWhlYWRlcj4KICAgICAgPG1kYi1tb2RhbC1ib2R5Pi4uLjwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyPgogICAgICAgIDxtZGItYnRuCiAgICAgICAgICBjb2xvcj0ic2Vjb25kYXJ5IgogICAgICAgICAgc2l6ZT0ic20iCiAgICAgICAgICBAY2xpY2submF0aXZlPSJzaG93TW9kYWw4ID0gZmFsc2UiCiAgICAgICAgICA+Q2xvc2U8L21kYi1idG4KICAgICAgICA+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIHNpemU9InNtIj5TYXZlIGNoYW5nZXM8L21kYi1idG4+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgoKICAgIDxtZGItbW9kYWwgc2l6ZT0ibGciIDpzaG93PSJzaG93TW9kYWw5IiBAY2xvc2U9InNob3dNb2RhbDkgPSBmYWxzZSI+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4KICAgICAgICAgIGNvbG9yPSJzZWNvbmRhcnkiCiAgICAgICAgICBzaXplPSJzbSIKICAgICAgICAgIEBjbGljay5uYXRpdmU9InNob3dNb2RhbDkgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSIgc2l6ZT0ic20iPlNhdmUgY2hhbmdlczwvbWRiLWJ0bj4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgPC9tZGItbW9kYWw+CgogICAgPG1kYi1tb2RhbCBzaXplPSJmbHVpZCIgOnNob3c9InNob3dNb2RhbDEwIiBAY2xvc2U9InNob3dNb2RhbDEwID0gZmFsc2UiPgogICAgICA8bWRiLW1vZGFsLWhlYWRlcj4KICAgICAgICA8bWRiLW1vZGFsLXRpdGxlPk1vZGFsIHRpdGxlPC9tZGItbW9kYWwtdGl0bGU+CiAgICAgIDwvbWRiLW1vZGFsLWhlYWRlcj4KICAgICAgPG1kYi1tb2RhbC1ib2R5Pi4uLjwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyPgogICAgICAgIDxtZGItYnRuCiAgICAgICAgICBjb2xvcj0ic2Vjb25kYXJ5IgogICAgICAgICAgc2l6ZT0ic20iCiAgICAgICAgICBAY2xpY2submF0aXZlPSJzaG93TW9kYWwxMCA9IGZhbHNlIgogICAgICAgICAgPkNsb3NlPC9tZGItYnRuCiAgICAgICAgPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBzaXplPSJzbSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KCiAgICA8bWRiLW1vZGFsCiAgICAgIGZ1bGxIZWlnaHQKICAgICAgcG9zaXRpb249InJpZ2h0IgogICAgICA6c2hvdz0ic2hvd01vZGFsMTEiCiAgICAgIEBjbG9zZT0ic2hvd01vZGFsMTEgPSBmYWxzZSIKICAgID4KICAgICAgPG1kYi1tb2RhbC1oZWFkZXI+CiAgICAgICAgPG1kYi1tb2RhbC10aXRsZT5Nb2RhbCB0aXRsZTwvbWRiLW1vZGFsLXRpdGxlPgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDxtZGItbW9kYWwtYm9keT4uLi48L21kYi1tb2RhbC1ib2R5PgogICAgICA8bWRiLW1vZGFsLWZvb3Rlcj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0ic2Vjb25kYXJ5IiBAY2xpY2submF0aXZlPSJzaG93TW9kYWwxMSA9IGZhbHNlIgogICAgICAgICAgPkNsb3NlPC9tZGItYnRuCiAgICAgICAgPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5Ij5TYXZlIGNoYW5nZXM8L21kYi1idG4+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgoKICAgIDxtZGItbW9kYWwKICAgICAgZnVsbEhlaWdodAogICAgICBwb3NpdGlvbj0ibGVmdCIKICAgICAgOnNob3c9InNob3dNb2RhbDEyIgogICAgICBAY2xvc2U9InNob3dNb2RhbDEyID0gZmFsc2UiCiAgICA+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InNlY29uZGFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMTIgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KCiAgICA8bWRiLW1vZGFsCiAgICAgIGZ1bGxIZWlnaHQKICAgICAgcG9zaXRpb249InRvcCIKICAgICAgOnNob3c9InNob3dNb2RhbDEzIgogICAgICBAY2xvc2U9InNob3dNb2RhbDEzID0gZmFsc2UiCiAgICA+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InNlY29uZGFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMTMgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KCiAgICA8bWRiLW1vZGFsCiAgICAgIGZ1bGxIZWlnaHQKICAgICAgcG9zaXRpb249ImJvdHRvbSIKICAgICAgOnNob3c9InNob3dNb2RhbDE0IgogICAgICBAY2xvc2U9InNob3dNb2RhbDE0ID0gZmFsc2UiCiAgICA+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyPgogICAgICAgIDxtZGItbW9kYWwtdGl0bGU+TW9kYWwgdGl0bGU8L21kYi1tb2RhbC10aXRsZT4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHk+Li4uPC9tZGItbW9kYWwtYm9keT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXI+CiAgICAgICAgPG1kYi1idG4gY29sb3I9InNlY29uZGFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMTQgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSI+U2F2ZSBjaGFuZ2VzPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KCiAgICA8IS0tIENlbnRyYWwgTW9kYWwgU3VjY2VzcyBEZW1vLS0+CiAgICA8bWRiLW1vZGFsCiAgICAgIHNpemU9InN1Y2Nlc3MiCiAgICAgIHBvc2l0aW9uPSJub3RpZnkiCiAgICAgIDpzaG93PSJzaG93TW9kYWwxNSIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwxNSA9IGZhbHNlIgogICAgPgogICAgICA8IS0tSGVhZGVyLS0+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyIGNsYXNzPSJ0ZXh0LXdoaXRlIj4KICAgICAgICA8cCBjbGFzcz0iaGVhZGluZyBsZWFkIj5Nb2RhbCBTdWNjZXNzPC9wPgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDwhLS1Cb2R5LS0+CiAgICAgIDxtZGItbW9kYWwtYm9keSBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgIDxtZGItaWNvbgogICAgICAgICAgaWNvbj0iY2hlY2siCiAgICAgICAgICBzaXplPSI0eCIKICAgICAgICAgIGNsYXNzPSJtYi0zIGFuaW1hdGVkIHJvdGF0ZUluIgogICAgICAgID48L21kYi1pY29uPgogICAgICAgIDxwPgogICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEltcGVkaXQKICAgICAgICAgIGl1c3RvIG51bGxhIGFwZXJpYW0gYmxhbmRpdGlpcyBhZCBjb25zZXF1YXR1ciBpbiBkb2xvcmVzIGN1bHBhLAogICAgICAgICAgZGlnbmlzc2ltb3MsIGVpdXMgbm9uIHBvc3NpbXVzIGZ1Z2lhdC4gRXNzZSByYXRpb25lIGZ1Z2EsIGVuaW0sIGFiCiAgICAgICAgICBvZmZpY2lpcyB0b3RhbS4KICAgICAgICA8L3A+CiAgICAgIDwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDwhLS1Gb290ZXItLT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXIgY2xhc3M9Imp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJzdWNjZXNzIj4KICAgICAgICAgIEdldCBpdCBub3cKICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZ2VtIHRleHQtd2hpdGUgbWwtMSI+PC9pPgogICAgICAgIDwvbWRiLWJ0bj4KICAgICAgICA8bWRiLWJ0biBvdXRsaW5lPSJzdWNjZXNzIiBAY2xpY2submF0aXZlPSJzaG93TW9kYWwxNSA9IGZhbHNlIgogICAgICAgICAgPk5vLCB0aGFua3M8L21kYi1idG4KICAgICAgICA+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgogICAgPCEtLSBDZW50cmFsIE1vZGFsIFN1Y2Nlc3MgRGVtby0tPgoKICAgIDwhLS0gQ2VudHJhbCBNb2RhbCBJbmZvIERlbW8tLT4KICAgIDxtZGItbW9kYWwKICAgICAgc2l6ZT0iaW5mbyIKICAgICAgcG9zaXRpb249Im5vdGlmeSIKICAgICAgOnNob3c9InNob3dNb2RhbDE2IgogICAgICBAY2xvc2U9InNob3dNb2RhbDE2ID0gZmFsc2UiCiAgICA+CiAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgPG1kYi1tb2RhbC1oZWFkZXIgY2xhc3M9InRleHQtd2hpdGUiPgogICAgICAgIDxwIGNsYXNzPSJoZWFkaW5nIGxlYWQiPk1vZGFsIEluZm88L3A+CiAgICAgIDwvbWRiLW1vZGFsLWhlYWRlcj4KICAgICAgPCEtLUJvZHktLT4KICAgICAgPG1kYi1tb2RhbC1ib2R5IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgPGltZwogICAgICAgICAgc3JjPSJodHRwczovL21kYm9vdHN0cmFwLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNi8xMS9hZG1pbi1kYXNoYm9hcmQtYm9vdHN0cmFwLmpwZyIKICAgICAgICAgIGFsdAogICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCIKICAgICAgICAvPgogICAgICAgIDxwPgogICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEltcGVkaXQKICAgICAgICAgIGl1c3RvIG51bGxhIGFwZXJpYW0gYmxhbmRpdGlpcyBhZCBjb25zZXF1YXR1ciBpbiBkb2xvcmVzIGN1bHBhLAogICAgICAgICAgZGlnbmlzc2ltb3MsIGVpdXMgbm9uIHBvc3NpbXVzIGZ1Z2lhdC4gRXNzZSByYXRpb25lIGZ1Z2EsIGVuaW0sIGFiCiAgICAgICAgICBvZmZpY2lpcyB0b3RhbS4KICAgICAgICA8L3A+CiAgICAgIDwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDwhLS1Gb290ZXItLT4KICAgICAgPG1kYi1tb2RhbC1mb290ZXIgY2xhc3M9Imp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgIDxtZGItYnRuIGNvbG9yPSJpbmZvIj4KICAgICAgICAgIEdldCBpdCBub3cKICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZ2VtIHRleHQtd2hpdGUgbWwtMSI+PC9pPgogICAgICAgIDwvbWRiLWJ0bj4KICAgICAgICA8bWRiLWJ0biBvdXRsaW5lPSJpbmZvIiBAY2xpY2submF0aXZlPSJzaG93TW9kYWwxNiA9IGZhbHNlIgogICAgICAgICAgPk5vLCB0aGFua3M8L21kYi1idG4KICAgICAgICA+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgogICAgPCEtLSBDZW50cmFsIE1vZGFsIEluZm8gRGVtby0tPgoKICAgIDwhLS0gQ2VudHJhbCBNb2RhbCBEYW5nZXIgRGVtby0tPgogICAgPG1kYi1tb2RhbAogICAgICBzaXplPSJkYW5nZXIiCiAgICAgIHBvc2l0aW9uPSJub3RpZnkiCiAgICAgIDpzaG93PSJzaG93TW9kYWwxNyIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwxNyA9IGZhbHNlIgogICAgPgogICAgICA8IS0tSGVhZGVyLS0+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyIGNsYXNzPSJ0ZXh0LXdoaXRlIj4KICAgICAgICA8cCBjbGFzcz0iaGVhZGluZyBsZWFkIj5Nb2RhbCBEYW5nZXI8L3A+CiAgICAgIDwvbWRiLW1vZGFsLWhlYWRlcj4KICAgICAgPCEtLUJvZHktLT4KICAgICAgPG1kYi1tb2RhbC1ib2R5PgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMyI+CiAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgICA8bWRiLWljb24gaWNvbj0ic2hvcHBpbmctY2FydCIgc2l6ZT0iNHgiPjwvbWRiLWljb24+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTkiPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gRnVnYSwKICAgICAgICAgICAgICBtb2xlc3RpYWUgcHJvdmlkZW50IHRlbXBvcmlidXMgc3VudCBlYXJ1bS4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIj52NTJnczE8L3NwYW4+CiAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9tZGItbW9kYWwtYm9keT4KICAgICAgPCEtLUZvb3Rlci0tPgogICAgICA8bWRiLW1vZGFsLWZvb3RlciBjbGFzcz0ianVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgPG1kYi1idG4gY29sb3I9ImRhbmdlciI+CiAgICAgICAgICBHZXQgaXQgbm93CiAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWdlbSB0ZXh0LXdoaXRlIG1sLTEiPjwvaT4KICAgICAgICA8L21kYi1idG4+CiAgICAgICAgPG1kYi1idG4gb3V0bGluZT0iZGFuZ2VyIiBAY2xpY2submF0aXZlPSJzaG93TW9kYWwxNyA9IGZhbHNlIgogICAgICAgICAgPk5vLCB0aGFua3M8L21kYi1idG4KICAgICAgICA+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgogICAgPCEtLSBDZW50cmFsIE1vZGFsIERhbmdlciBEZW1vLS0+CgogICAgPCEtLSBDZW50cmFsIE1vZGFsIFdhcm5pbmcgRGVtby0tPgogICAgPG1kYi1tb2RhbAogICAgICBzaXplPSJ3YXJuaW5nIgogICAgICBwb3NpdGlvbj0ibm90aWZ5IgogICAgICA6c2hvdz0ic2hvd01vZGFsMTgiCiAgICAgIEBjbG9zZT0ic2hvd01vZGFsMTggPSBmYWxzZSIKICAgID4KICAgICAgPCEtLUhlYWRlci0tPgogICAgICA8bWRiLW1vZGFsLWhlYWRlciBjbGFzcz0idGV4dC13aGl0ZSI+CiAgICAgICAgPHAgY2xhc3M9ImhlYWRpbmcgbGVhZCI+TW9kYWwgV2FybmluZzwvcD4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8IS0tQm9keS0tPgogICAgICA8bWRiLW1vZGFsLWJvZHk+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0zIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vaW1nL1Bob3Rvcy9BdmF0YXJzL2ltZyUyMCgxKS5qcGciCiAgICAgICAgICAgICAgYWx0PSJNaWNoYWwgU3p5bWFuc2tpIC0gZm91bmRlciBvZiBNYXRlcmlhbCBEZXNpZ24gZm9yIEJvb3RzdHJhcCIKICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHotZGVwdGgtMS1oYWxmIHJvdW5kZWQtY2lyY2xlIgogICAgICAgICAgICAvPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJoZWlnaHQ6IDEwcHgiPjwvZGl2PgogICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUgbWItMCI+SmFuZTwvcD4KICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQiIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPkNvbnN1bHRhbnQ8L3A+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtOSI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBGdWdhLAogICAgICAgICAgICAgIG1vbGVzdGlhZSBwcm92aWRlbnQgdGVtcG9yaWJ1cyBzdW50IGVhcnVtLgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPgogICAgICAgICAgICAgIDxzdHJvbmcKICAgICAgICAgICAgICAgID5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcKICAgICAgICAgICAgICAgIGVsaXQuPC9zdHJvbmcKICAgICAgICAgICAgICA+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgICA8IS0tRm9vdGVyLS0+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyIGNsYXNzPSJqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0id2FybmluZyI+CiAgICAgICAgICBHZXQgaXQgbm93CiAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWdlbSB0ZXh0LXdoaXRlIG1sLTEiPjwvaT4KICAgICAgICA8L21kYi1idG4+CiAgICAgICAgPG1kYi1idG4gb3V0bGluZT0id2FybmluZyIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMTggPSBmYWxzZSIKICAgICAgICAgID5ObywgdGhhbmtzPC9tZGItYnRuCiAgICAgICAgPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KICAgIDwhLS0gQ2VudHJhbCBNb2RhbCBXYXJuaW5nIERlbW8tLT4KCiAgICA8IS0tIENlbnRyYWwgTW9kYWwgQ29udGFjdCBGb3JtLS0+CiAgICA8bWRiLW1vZGFsIGNhc2NhZGUgOnNob3c9InNob3dNb2RhbDE5IiBAY2xvc2U9InNob3dNb2RhbDE5ID0gZmFsc2UiPgogICAgICA8IS0tSGVhZGVyLS0+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyIGNsYXNzPSJsaWdodC1ibHVlIGRhcmtlbi0zIHRleHQtd2hpdGUiPgogICAgICAgIDxoNCBjbGFzcz48aSBjbGFzcz0iZmFzIGZhLXBlbmNpbCI+PC9pPiBDb250YWN0IGZvcm08L2g0PgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDwhLS1Cb2R5LS0+CiAgICAgIDxtZGItbW9kYWwtYm9keT4KICAgICAgICA8bWRiLWlucHV0CiAgICAgICAgICBjbGFzcz0iZ3JleS10ZXh0IgogICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgIGxhYmVsPSJZb3VyIG5hbWUiCiAgICAgICAgICBpY29uPSJ1c2VyIgogICAgICAgIC8+CiAgICAgICAgPG1kYi1pbnB1dAogICAgICAgICAgY2xhc3M9ImdyZXktdGV4dCIKICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICBsYWJlbD0iWW91ciBlbWFpbCIKICAgICAgICAgIGljb249ImVudmVsb3BlIgogICAgICAgIC8+CiAgICAgICAgPG1kYi1pbnB1dAogICAgICAgICAgY2xhc3M9ImdyZXktdGV4dCIKICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICBsYWJlbD0iWW91ciBwYXNzd29yZCIKICAgICAgICAgIGljb249InRhZyIKICAgICAgICAvPgogICAgICAgIDxtZGItdGV4dGFyZWEKICAgICAgICAgIGNsYXNzPSJncmV5LXRleHQiCiAgICAgICAgICA6cm93cz0iNCIKICAgICAgICAgIGxhYmVsPSJNZXNzYWdlIgogICAgICAgICAgaWNvbj0icGVuY2lsLWFsdCIKICAgICAgICAvPgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgICA8IS0tRm9vdGVyLS0+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyIGNsYXNzPSJqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0iaW5mbyIgaWNvbj0icGFwZXItcGxhbmUiIGljb25SaWdodD5TZW5kPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1mb290ZXI+CiAgICA8L21kYi1tb2RhbD4KICAgIDwhLS0gQ2VudHJhbCBNb2RhbCBDb250YWN0IEZvcm0tLT4KCiAgICA8IS0tIENlbnRyYWwgTW9kYWwgQ29udGFjdCBGb3JtLS0+CiAgICA8bWRiLW1vZGFsIDpzaG93PSJzaG93TW9kYWwyMCIgQGNsb3NlPSJzaG93TW9kYWwyMCA9IGZhbHNlIiBjYXNjYWRlIHRhYnM+CiAgICAgIDxtZGItdGFiIHRhYnMganVzdGlmeSBjbGFzcz0ibGlnaHQtYmx1ZSBkYXJrZW4tMyI+CiAgICAgICAgPG1kYi10YWItaXRlbSA6YWN0aXZlPSJ0YWJzID09IDEiIEBjbGljay5uYXRpdmUucHJldmVudD0idGFicyA9IDEiPgogICAgICAgICAgPG1kYi1pY29uIGljb249InVzZXIiIGNsYXNzPSJtci0xIiAvPkxvZ2luCiAgICAgICAgPC9tZGItdGFiLWl0ZW0+CiAgICAgICAgPG1kYi10YWItaXRlbSA6YWN0aXZlPSJ0YWJzID09IDIiIEBjbGljay5uYXRpdmUucHJldmVudD0idGFicyA9IDIiPgogICAgICAgICAgPG1kYi1pY29uIGljb249InVzZXItcGx1cyIgY2xhc3M9Im1yLTEiIC8+UmVnaXN0ZXIKICAgICAgICA8L21kYi10YWItaXRlbT4KICAgICAgPC9tZGItdGFiPgogICAgICA8bWRiLW1vZGFsLWJvZHkgY2xhc3M9Im14LTMiIHYtaWY9InRhYnMgPT0gMSI+CiAgICAgICAgPG1kYi1pbnB1dAogICAgICAgICAgbGFiZWw9IllvdXIgZW1haWwiCiAgICAgICAgICBpY29uPSJlbnZlbG9wZSIKICAgICAgICAgIHR5cGU9ImVtYWlsIgogICAgICAgICAgY2xhc3M9Im1iLTUiCiAgICAgICAgLz4KICAgICAgICA8bWRiLWlucHV0IGxhYmVsPSJZb3VyIHBhc3N3b3JkIiBpY29uPSJsb2NrIiB0eXBlPSJwYXNzd29yZCIgLz4KICAgICAgICA8ZGl2IGNsYXNzPSJtdC0yIHRleHQtY2VudGVyIj4KICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJpbmZvIj4KICAgICAgICAgICAgTG9nIGluCiAgICAgICAgICAgIDxtZGItaWNvbiBpY29uPSJzaWduLWluLWFsdCIgY2xhc3M9Im1sLTEiIC8+CiAgICAgICAgICA8L21kYi1idG4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbWRiLW1vZGFsLWJvZHk+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyIGNlbnRlciB2LWlmPSJ0YWJzID09IDEiPgogICAgICAgIDxkaXYgY2xhc3M9Im9wdGlvbnMgdGV4dC1jZW50ZXIgdGV4dC1tZC1yaWdodCBtdC0xIj4KICAgICAgICAgIDxwPgogICAgICAgICAgICBOb3QgYSBtZW1iZXI/CiAgICAgICAgICAgIDxhIGhyZWY9IiMiIEBjbGljaz0idGFicyA9IDIiPlNpZ24gVXA8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgRm9yZ290CiAgICAgICAgICAgIDxhIGhyZWY9IiMiPlBhc3N3b3JkPzwvYT4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8bWRiLWJ0bgogICAgICAgICAgb3V0bGluZT0iaW5mbyIKICAgICAgICAgIGNsYXNzPSJtbC1hdXRvIgogICAgICAgICAgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMjAgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgICA8bWRiLW1vZGFsLWJvZHkgY2xhc3M9Im14LTMiIHYtaWY9InRhYnMgPT0gMiI+CiAgICAgICAgPG1kYi1pbnB1dAogICAgICAgICAgbGFiZWw9IllvdXIgZW1haWwiCiAgICAgICAgICBpY29uPSJlbnZlbG9wZSIKICAgICAgICAgIHR5cGU9ImVtYWlsIgogICAgICAgICAgY2xhc3M9Im1iLTUiCiAgICAgICAgLz4KICAgICAgICA8bWRiLWlucHV0CiAgICAgICAgICBsYWJlbD0iWW91ciBwYXNzd29yZCIKICAgICAgICAgIGljb249ImxvY2siCiAgICAgICAgICB0eXBlPSJwYXNzd29yZCIKICAgICAgICAgIGNsYXNzPSJtYi01IgogICAgICAgIC8+CiAgICAgICAgPG1kYi1pbnB1dCBsYWJlbD0iUmVwZWF0IHBhc3N3b3JkIiBpY29uPSJsb2NrIiB0eXBlPSJwYXNzd29yZCIgLz4KICAgICAgICA8ZGl2IGNsYXNzPSJtdC0yIHRleHQtY2VudGVyIj4KICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJpbmZvIj4KICAgICAgICAgICAgU2lnbiBVcAogICAgICAgICAgICA8bWRiLWljb24gaWNvbj0ic2lnbi1pbi1hbHQiIGNsYXNzPSJtbC0xIiAvPgogICAgICAgICAgPC9tZGItYnRuPgogICAgICAgIDwvZGl2PgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgICA8bWRiLW1vZGFsLWZvb3RlciBjZW50ZXIgdi1pZj0idGFicyA9PSAyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJvcHRpb25zIHRleHQtY2VudGVyIHRleHQtbWQtcmlnaHQgbXQtMSI+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgQWxyZWFkeSBoYXZlIGFuIGFjY291bnQ/CiAgICAgICAgICAgIDxhIGhyZWY9IiMiIEBjbGljaz0idGFicyA9IDEiPkxvZyBpbjwvYT4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8bWRiLWJ0bgogICAgICAgICAgb3V0bGluZT0iaW5mbyIKICAgICAgICAgIGNsYXNzPSJtbC1hdXRvIgogICAgICAgICAgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMjAgPSBmYWxzZSIKICAgICAgICAgID5DbG9zZTwvbWRiLWJ0bgogICAgICAgID4KICAgICAgPC9tZGItbW9kYWwtZm9vdGVyPgogICAgPC9tZGItbW9kYWw+CiAgICA8IS0tIENlbnRyYWwgTW9kYWwgQ29udGFjdCBGb3JtLS0+CgogICAgPCEtLSBDZW50cmFsIE1vZGFsIFN1YnNjcmlwdGlvbiBGb3JtLS0+CiAgICA8bWRiLW1vZGFsIGNhc2NhZGUgOnNob3c9InNob3dNb2RhbDIxIiBAY2xvc2U9InNob3dNb2RhbDIxID0gZmFsc2UiPgogICAgICA8IS0tSGVhZGVyLS0+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyIGNsYXNzPSJsaWdodC1ibHVlIGRhcmtlbi0zIHRleHQtd2hpdGUiPgogICAgICAgIDxoNCBjbGFzcz48aSBjbGFzcz0iZmFzIGZhLW5ld3NwYXBlci1vIj48L2k+IFN1YnNjcmlwdGlvbiBmb3JtPC9oND4KICAgICAgPC9tZGItbW9kYWwtaGVhZGVyPgogICAgICA8IS0tQm9keS0tPgogICAgICA8bWRiLW1vZGFsLWJvZHk+CiAgICAgICAgPG1kYi1pbnB1dAogICAgICAgICAgY2xhc3M9ImdyZXktdGV4dCIKICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICBsYWJlbD0iWW91ciBuYW1lIgogICAgICAgICAgaWNvbj0idXNlciIKICAgICAgICAvPgogICAgICAgIDxtZGItaW5wdXQKICAgICAgICAgIGNsYXNzPSJncmV5LXRleHQiCiAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgbGFiZWw9IllvdXIgZW1haWwiCiAgICAgICAgICBpY29uPSJlbnZlbG9wZSIKICAgICAgICAvPgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgICA8IS0tRm9vdGVyLS0+CiAgICAgIDxtZGItbW9kYWwtZm9vdGVyIGNsYXNzPSJqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0iaW5mbyIgaWNvbj0iY2hlY2siIGljb25SaWdodD5TdWJtaXQ8L21kYi1idG4+CiAgICAgIDwvbWRiLW1vZGFsLWZvb3Rlcj4KICAgIDwvbWRiLW1vZGFsPgogICAgPCEtLSBDZW50cmFsIE1vZGFsIFN1YnNjcmlwdGlvbiBGb3JtLS0+CgogICAgPCEtLSBDZW50cmFsIE1vZGFsIEF2YXRhciBGb3JtLS0+CiAgICA8bWRiLW1vZGFsCiAgICAgIGNhc2NhZGUKICAgICAgc2l6ZT0ic20iCiAgICAgIHBvc2l0aW9uPSJhdmF0YXIiCiAgICAgIDpzaG93PSJzaG93TW9kYWwyMiIKICAgICAgQGNsb3NlPSJzaG93TW9kYWwyMiA9IGZhbHNlIgogICAgPgogICAgICA8IS0tSGVhZGVyLS0+CiAgICAgIDxtZGItbW9kYWwtaGVhZGVyIDpjbG9zZT0iZmFsc2UiPgogICAgICAgIDxpbWcKICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vaW1nL1Bob3Rvcy9BdmF0YXJzL2ltZyUyMCUyODElMjkuanBnIgogICAgICAgICAgY2xhc3M9InJvdW5kZWQtY2lyY2xlIGltZy1mbHVpZCIKICAgICAgICAvPgogICAgICA8L21kYi1tb2RhbC1oZWFkZXI+CiAgICAgIDwhLS1Cb2R5LS0+CiAgICAgIDxtZGItbW9kYWwtYm9keSBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgIDxoNSBjbGFzcz0ibXQtMSBtYi0yIj5NYXJpYSBEb2U8L2g1PgogICAgICAgIDxtZGItaW5wdXQgY2xhc3M9ImdyZXktdGV4dCIgdHlwZT0icGFzc3dvcmQiIGxhYmVsPSJFbnRlciBwYXNzd29yZCIgLz4KICAgICAgICA8bWRiLWJ0biBjb2xvcj0iaW5mbyIgaWNvbj0ic2lnbiIgaWNvblJpZ2h0PkxvZ2luPC9tZGItYnRuPgogICAgICA8L21kYi1tb2RhbC1ib2R5PgogICAgPC9tZGItbW9kYWw+CiAgICA8IS0tIENlbnRyYWwgTW9kYWwgQXZhdGFyIEZvcm0tLT4KICA8L3NlY3Rpb24+CiAgPCEtLS9TZWN0aW9uOiBNb2RhbHMtLT4KCiAgPCEtLSBTRUNUSU9OOiBEZW1vLS0+CiAgPHNlY3Rpb24+CiAgICA8IS0tU2VjdGlvbjogUG9zaXRpb24gJiBTaXplcy0tPgogICAgPHNlY3Rpb24+CiAgICAgIDxoNCBjbGFzcz0ibWItNSBtdC00IGRhcmstZ3JleS10ZXh0IHRleHQtY2VudGVyIGZvbnQtd2VpZ2h0LWJvbGQiPgogICAgICAgIDxzdHJvbmc+UG9zaXRpb24gJiBTaXplczwvc3Ryb25nPgogICAgICA8L2g0PgoKICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgbWItNSI+CiAgICAgICAgPHAgY2xhc3M9ImxlYWQiPkNsaWNrIGJ1dHRvbnMgYmVsb3cgdG8gbGF1bmNoIG1vZGFscyBkZW1vPC9wPgogICAgICA8L2Rpdj4KCiAgICAgIDwhLS0gRmlyc3Qgcm93LS0+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPCEtLUZpcnN0IGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIj4KICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC1jZW50ZXIgbWItMyI+RnJhbWUgTW9kYWw8L2g1PgoKICAgICAgICAgIDxpbWcKICAgICAgICAgICAgc3JjPSJodHRwczovL21kYm9vdHN0cmFwLmNvbS9pbWcvYnJhbmRmbG93L21vZGFsNC5qcGciCiAgICAgICAgICAgIGFsdAogICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHotZGVwdGgtMSIKICAgICAgICAgIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxoNSBjbGFzcz0ibXktMyI+UG9zaXRpb248L2g1PgoKICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljay5uYXRpdmU9InNob3dNb2RhbCA9IHRydWUiCiAgICAgICAgICAgICAgPlRvcDwvbWRiLWJ0bgogICAgICAgICAgICA+CiAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICA8bWRiLWJ0biBjb2xvcj0icHJpbWFyeSIgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMiA9IHRydWUiCiAgICAgICAgICAgICAgPkJvdHRvbTwvbWRiLWJ0bgogICAgICAgICAgICA+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tRmlyc3QgY29sdW1uLS0+CgogICAgICAgIDwhLS1TZWNvbmQgY29sdW1uLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMiPgogICAgICAgICAgPGg1IGNsYXNzPSJ0ZXh0LWNlbnRlciBtYi0zIj5TaWRlIE1vZGFsPC9oNT4KCiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vaW1nL2JyYW5kZmxvdy9tb2RhbDMuanBnIgogICAgICAgICAgICBhbHQKICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCB6LWRlcHRoLTEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8aDUgY2xhc3M9Im15LTMiPlBvc2l0aW9uPC9oNT4KCiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDMgPSB0cnVlIgogICAgICAgICAgICAgID5Ub3AgcmlnaHQ8L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljaz0ic2hvd01vZGFsNCA9IHRydWUiCiAgICAgICAgICAgICAgPlRvcCBsZWZ0PC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDUgPSB0cnVlIgogICAgICAgICAgICAgID5Cb3R0b20gcmlnaHQ8L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljaz0ic2hvd01vZGFsNiA9IHRydWUiCiAgICAgICAgICAgICAgPkJvdHRvbSBsZWZ0PC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tU2Vjb25kIGNvbHVtbi0tPgoKICAgICAgICA8IS0tVGhpcmQgY29sdW1uLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMiPgogICAgICAgICAgPGg1IGNsYXNzPSJ0ZXh0LWNlbnRlciBtYi0zIj5DZW50cmFsIE1vZGFsPC9oNT4KCiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vaW1nL2JyYW5kZmxvdy9tb2RhbDIuanBnIgogICAgICAgICAgICBhbHQKICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCB6LWRlcHRoLTEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8aDUgY2xhc3M9Im15LTMiPlNpemU8L2g1PgoKICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljaz0ic2hvd01vZGFsNyA9IHRydWUiCiAgICAgICAgICAgICAgPlNtYWxsPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDggPSB0cnVlIgogICAgICAgICAgICAgID5NZWRpdW08L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljaz0ic2hvd01vZGFsOSA9IHRydWUiCiAgICAgICAgICAgICAgPkxhcmdlPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDEwID0gdHJ1ZSIKICAgICAgICAgICAgICA+Rmx1aWQ8L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS1UaGlyZCBjb2x1bW4tLT4KCiAgICAgICAgPCEtLUZvdXJ0aCBjb2x1bW4tLT4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyI+CiAgICAgICAgICA8aDUgY2xhc3M9InRleHQtY2VudGVyIG1iLTMiPkZsdWlkIE1vZGFsPC9oNT4KCiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vaW1nL2JyYW5kZmxvdy9tb2RhbDEuanBnIgogICAgICAgICAgICBhbHQKICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCB6LWRlcHRoLTEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8aDUgY2xhc3M9Im15LTMiPlBvc2l0aW9uPC9oNT4KCiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDExID0gdHJ1ZSIKICAgICAgICAgICAgICA+UmlnaHQ8L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgPG1kYi1idG4gY29sb3I9InByaW1hcnkiIEBjbGljaz0ic2hvd01vZGFsMTIgPSB0cnVlIgogICAgICAgICAgICAgID5MZWZ0PC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDEzID0gdHJ1ZSIKICAgICAgICAgICAgICA+VG9wPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDxtZGItYnRuIGNvbG9yPSJwcmltYXJ5IiBAY2xpY2s9InNob3dNb2RhbDE0ID0gdHJ1ZSIKICAgICAgICAgICAgICA+Qm90dG9tPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tRm91cnRoIGNvbHVtbi0tPgogICAgICA8L2Rpdj4KICAgICAgPCEtLSAvLkZpcnN0IHJvdy0tPgogICAgPC9zZWN0aW9uPgogICAgPCEtLS9TZWN0aW9uOiBQb3NpdGlvbiAmIFNpemVzLS0+CgogICAgPGhyIGNsYXNzPSJteS01IiAvPgoKICAgIDwhLS1TZWN0aW9uOiBTdHlsZXMtLT4KICAgIDxzZWN0aW9uPgogICAgICA8aDQgY2xhc3M9Im15LTUgbXQtNCBkYXJrLWdyZXktdGV4dCB0ZXh0LWNlbnRlciI+CiAgICAgICAgPHN0cm9uZz5TdHlsZXMgZXhhbXBsZXM8L3N0cm9uZz4KICAgICAgPC9oND4KCiAgICAgIDwhLS1GaXJzdCByb3ctLT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8IS0tRmlyc3QgY29sdW1uLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8bWRiLWJ0bgogICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgICAgICBAY2xpY2s9InNob3dNb2RhbDE1ID0gdHJ1ZSIKICAgICAgICAgICAgICBpY29uPSJleWUiCiAgICAgICAgICAgICAgaWNvblJpZ2h0CiAgICAgICAgICAgICAgPkxhdW5jaCBNb2RhbCBTdWNjZXNzPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogbWRiLWFiYW5kb25lZENhcnQtaGFyZC0tPgogICAgICAgICAgPGRpdgogICAgICAgICAgICBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLW5vdGlmeSBtb2RhbC1zdWNjZXNzIgogICAgICAgICAgICByb2xlPSJkb2N1bWVudCIKICAgICAgICAgID4KICAgICAgICAgICAgPCEtLUNvbnRlbnQtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgICAgPCEtLUhlYWRlci0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iaGVhZGluZyBsZWFkIj5Nb2RhbCBTdWNjZXNzPC9wPgoKICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICBjbGFzcz0iY2xvc2UiCiAgICAgICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz0ibW9kYWwiCiAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNsb3NlIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgY2xhc3M9IndoaXRlLXRleHQiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPCEtLUJvZHktLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1jaGVjayBmYS00eCBtYi0zIGFuaW1hdGVkIHJvdGF0ZUluIj48L2k+CiAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LgogICAgICAgICAgICAgICAgICAgIEltcGVkaXQgaXVzdG8gbnVsbGEgYXBlcmlhbSBibGFuZGl0aWlzIGFkIGNvbnNlcXVhdHVyIGluCiAgICAgICAgICAgICAgICAgICAgZG9sb3JlcyBjdWxwYSwgZGlnbmlzc2ltb3MsIGVpdXMgbm9uIHBvc3NpbXVzIGZ1Z2lhdC4gRXNzZQogICAgICAgICAgICAgICAgICAgIHJhdGlvbmUgZnVnYSwgZW5pbSwgYWIgb2ZmaWNpaXMgdG90YW0uCiAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8IS0tRm9vdGVyLS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGEgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIHB4LTMgcHgtMyI+CiAgICAgICAgICAgICAgICAgIEdldCBpdCBub3cKICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1nZW0gdGV4dC13aGl0ZSBtbC0xIj48L2k+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtc3VjY2VzcyB3YXZlcy1lZmZlY3QgcHgtMyBweC0zIgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICA+Tm8sIHRoYW5rczwvYQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPCEtLS8uQ29udGVudC0tPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLS9GaXJzdCBjb2x1bW4tLT4KCiAgICAgICAgPCEtLVNlY29uZCBjb2x1bW4tLT4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxtZGItYnRuCiAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgcm91bmRlZAogICAgICAgICAgICAgIEBjbGljay5uYXRpdmU9InNob3dNb2RhbDE2ID0gdHJ1ZSIKICAgICAgICAgICAgICBpY29uPSJleWUiCiAgICAgICAgICAgICAgaWNvblJpZ2h0CiAgICAgICAgICAgICAgPkxhdW5jaCBNb2RhbCBJbmZvPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogbWRiLWFiYW5kb25lZENhcnQtaGFyZC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLW5vdGlmeSBtb2RhbC1pbmZvIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgICAgIDwhLS1Db250ZW50LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImhlYWRpbmcgbGVhZCI+TW9kYWwgSW5mbzwvcD4KCiAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImNsb3NlIgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJ3aGl0ZS10ZXh0Ij4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDwhLS1Cb2R5LS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTYvMTEvYWRtaW4tZGFzaGJvYXJkLWJvb3RzdHJhcC5qcGciCiAgICAgICAgICAgICAgICAgIGFsdAogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIgogICAgICAgICAgICAgICAgLz4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LgogICAgICAgICAgICAgICAgICAgIE5lc2NpdW50IHZlcm8gaWxsbyBlcnJvciBldmVuaWV0IGN1bS4KICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDwhLS1Gb290ZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YSB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWluZm8gcHgtMyI+CiAgICAgICAgICAgICAgICAgIEdldCBpdCBub3cKICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1nZW0gdGV4dC13aGl0ZSBtbC0xIj48L2k+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtaW5mbyB3YXZlcy1lZmZlY3QgcHgtMyIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgPk5vLCB0aGFua3M8L2EKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0vLkNvbnRlbnQtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLS9Nb2RhbDogbWRiLWFiYW5kb25lZENhcnQtaGFyZC0tPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0vU2Vjb25kIGNvbHVtbi0tPgogICAgICA8L2Rpdj4KICAgICAgPCEtLS9GaXJzdCByb3ctLT4KCiAgICAgIDwhLS1TZWNvbmQgcm93LS0+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPCEtLUZpcnN0IGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPG1kYi1idG4KICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgICAgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMTcgPSB0cnVlIgogICAgICAgICAgICAgIGljb249ImV5ZSIKICAgICAgICAgICAgICBpY29uUmlnaHQKICAgICAgICAgICAgICA+TGF1bmNoIE1vZGFsIERhbmdlcjwvbWRiLWJ0bgogICAgICAgICAgICA+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8IS0tTW9kYWw6IG1kYi1hYmFuZG9uZWRDYXJ0LWhhcmQtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1ub3RpZnkgbW9kYWwtZGFuZ2VyIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgICAgIDwhLS1Db250ZW50LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImhlYWRpbmciPk1vZGFsIERhbmdlcjwvcD4KCiAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImNsb3NlIgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJ3aGl0ZS10ZXh0Ij4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDwhLS1Cb2R5LS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMyI+CiAgICAgICAgICAgICAgICAgICAgPHA+PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXNob3BwaW5nLWNhcnQgZmEtNHgiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTkiPgogICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nCiAgICAgICAgICAgICAgICAgICAgICBlbGl0LiBGdWdhLCBtb2xlc3RpYWUgcHJvdmlkZW50IHRlbXBvcmlidXMgc3VudCBlYXJ1bS4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPGgyPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIj52NTJnczE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPCEtLUZvb3Rlci0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxhIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGFuZ2VyIHB4LTMiPgogICAgICAgICAgICAgICAgICBHZXQgaXQgbm93CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZ2VtIHRleHQtd2hpdGUgbWwtMSI+PC9pPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLWRhbmdlciB3YXZlcy1lZmZlY3QgcHgtMyIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgPk5vLCB0aGFua3M8L2EKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0vLkNvbnRlbnQtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0vRmlyc3QgY29sdW1uLS0+CgogICAgICAgIDwhLS1TZWNvbmQgY29sdW1uLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8bWRiLWJ0bgogICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgICAgICBAY2xpY2s9InNob3dNb2RhbDE4ID0gdHJ1ZSIKICAgICAgICAgICAgICBpY29uPSJleWUiCiAgICAgICAgICAgICAgaWNvblJpZ2h0CiAgICAgICAgICAgICAgPkxhdW5jaCBNb2RhbCBXYXJuaW5nPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogbWRiLWFiYW5kb25lZENhcnQtaGFyZC0tPgogICAgICAgICAgPGRpdgogICAgICAgICAgICBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLW5vdGlmeSBtb2RhbC13YXJuaW5nIgogICAgICAgICAgICByb2xlPSJkb2N1bWVudCIKICAgICAgICAgID4KICAgICAgICAgICAgPCEtLUNvbnRlbnQtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgICAgPCEtLUhlYWRlci0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iaGVhZGluZyI+TW9kYWwgV2FybmluZzwvcD4KCiAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImNsb3NlIgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJ3aGl0ZS10ZXh0Ij4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDwhLS1Cb2R5LS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMyB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL21kYm9vdHN0cmFwLmNvbS9pbWcvUGhvdG9zL0F2YXRhcnMvaW1nJTIwKDEpLmpwZyIKICAgICAgICAgICAgICAgICAgICAgIGFsdD0iTWljaGFsIFN6eW1hbnNraSAtIGZvdW5kZXIgb2YgTWF0ZXJpYWwgRGVzaWduIGZvciBCb290c3RyYXAiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHotZGVwdGgtMS1oYWxmIHJvdW5kZWQtY2lyY2xlIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iaGVpZ2h0OiAxMHB4Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUgbWItMCI+SmFuZTwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1tdXRlZCIgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdWx0YW50CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC05Ij4KICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZwogICAgICAgICAgICAgICAgICAgICAgZWxpdC4gRnVnYSwgbW9sZXN0aWFlIHByb3ZpZGVudCB0ZW1wb3JpYnVzIHN1bnQgZWFydW0uCiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZwogICAgICAgICAgICAgICAgICAgICAgICA+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaXQuPC9zdHJvbmcKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDwhLS1Gb290ZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YSB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXdhcm5pbmcgcHgtMyI+CiAgICAgICAgICAgICAgICAgIEdldCBpdCBub3cKICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1nZW0gdGV4dC13aGl0ZSBtbC0xIj48L2k+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtd2FybmluZyB3YXZlcy1lZmZlY3QgcHgtMyIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgPk5vLCB0aGFua3M8L2EKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0vLkNvbnRlbnQtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0vU2Vjb25kIGNvbHVtbi0tPgogICAgICA8L2Rpdj4KICAgICAgPCEtLS9TZWNvbmQgcm93LS0+CiAgICA8L3NlY3Rpb24+CiAgICA8IS0tU2VjdGlvbjogU3R5bGVzLS0+CgogICAgPGhyIGNsYXNzPSJteS01IiAvPgoKICAgIDwhLS1TZWN0aW9uOiBGb3Jtcy0tPgogICAgPHNlY3Rpb24+CiAgICAgIDxoNCBjbGFzcz0ibXktNSBtdC00IGRhcmstZ3JleS10ZXh0IHRleHQtY2VudGVyIj4KICAgICAgICA8c3Ryb25nPkZvcm1zIEV4YW1wbGVzPC9zdHJvbmc+CiAgICAgIDwvaDQ+CgogICAgICA8IS0tRmlyc3Qgcm93LS0+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPCEtLUZpcnN0IGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPG1kYi1idG4KICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgICAgQGNsaWNrPSJzaG93TW9kYWwxOSA9IHRydWUiCiAgICAgICAgICAgICAgaWNvbj0iZXllIgogICAgICAgICAgICAgIGljb25SaWdodAogICAgICAgICAgICAgID5MYXVuY2ggTW9kYWwgQ29udGFjdCBGb3JtPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogQ29udGFjdCBmb3JtLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgY2FzY2FkaW5nLW1vZGFsIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgICAgIDwhLS1Db250ZW50LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIgbGlnaHQtYmx1ZSBkYXJrZW4tMyB3aGl0ZS10ZXh0Ij4KICAgICAgICAgICAgICAgIDxoNCBjbGFzcz48aSBjbGFzcz0iZmFzIGZhLXBlbmNpbC1hbHQiPjwvaT4gQ29udGFjdCBmb3JtPC9oND4KICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICBjbGFzcz0iY2xvc2Ugd2F2ZXMtZWZmZWN0IHdhdmVzLWxpZ2h0IgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tQm9keS0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkgbWItMCI+CiAgICAgICAgICAgICAgICAgIDxtZGItaW5wdXQgc2l6ZT0ic20iIGljb249ImVudmVsb3BlIiBsYWJlbD0iWW91ciBuYW1lIiB0eXBlPSJ0ZXh0IiAvPgoKICAgICAgICAgICAgICAgIDxtZGItaW5wdXQgc2l6ZT0ic20iIGljb249ImxvY2siIGxhYmVsPSJZb3VyIGVtYWlsIiB0eXBlPSJlbWFpbCIgLz4KCiAgICAgICAgICAgICAgICA8bWRiLWlucHV0IHNpemU9InNtIiBpY29uPSJ0YWciIGxhYmVsPSJTdWJqZWN0IiB0eXBlPSJ0ZXh0IiAvPgoKCiAgICAgICAgICAgICAgICA8bWRiLWlucHV0IHNpemU9InNtIiBpY29uPSJwZW5jaWwtYWx0IiBsYWJlbD0iWW91ciBtZXNzYWdlIiB0eXBlPSJ0ZXh0YXJlYSIgOnJvd3M9IjMiLz4KCgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgbXQtMS1oYWxmIj4KICAgICAgICAgICAgICAgICAgPG1kYi1idG4gaWNvbj0icGFwZXItcGxhbmUiIGljb25SaWdodCBjb2xvcj0iaW5mbyI+U2VuZDwvbWRiLWJ0bj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPCEtLS8uQ29udGVudC0tPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8IS0tL01vZGFsOiBDb250YWN0IGZvcm0tLT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tL0ZpcnN0IGNvbHVtbi0tPgoKICAgICAgICA8IS0tU2Vjb25kIGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPG1kYi1idG4KICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgICAgQGNsaWNrPSJzaG93TW9kYWwyMCA9IHRydWUiCiAgICAgICAgICAgICAgaWNvbj0iZXllIgogICAgICAgICAgICAgIGljb25SaWdodAogICAgICAgICAgICAgID5MYXVuY2ggTW9kYWwgTG9naW4vUmVnaXN0ZXI8L21kYi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPCEtLU1vZGFsOiBMb2dpbiAmIFJlZ2lzdGVyIHRhYnMtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBjYXNjYWRpbmctbW9kYWwiIHJvbGU9ImRvY3VtZW50Ij4KICAgICAgICAgICAgPCEtLUNvbnRlbnQtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgICAgPCEtLU1vZGFsIGNhc2NhZGluZyB0YWJzLS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYy10YWJzIj4KICAgICAgICAgICAgICAgIDwhLS0gTmF2IHRhYnMgLS0+CiAgICAgICAgICAgICAgICA8dWwKICAgICAgICAgICAgICAgICAgY2xhc3M9Im5hdiBtZC10YWJzIHRhYnMtMiBsaWdodC1ibHVlIGRhcmtlbi0zIgogICAgICAgICAgICAgICAgICByb2xlPSJ0YWJsaXN0IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im5hdi1saW5rIGFjdGl2ZSIKICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJ0YWIiCiAgICAgICAgICAgICAgICAgICAgICBocmVmPSIjcGFuZWwxIgogICAgICAgICAgICAgICAgICAgICAgcm9sZT0idGFiIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtdXNlciBtci0xIj48L2k+IExvZ2luCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im5hdi1saW5rIgogICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRhYiIKICAgICAgICAgICAgICAgICAgICAgIGhyZWY9IiNwYW5lbDIiCiAgICAgICAgICAgICAgICAgICAgICByb2xlPSJ0YWIiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS11c2VyLXBsdXMgbXItMSI+PC9pPiBSZWdpc3RlcgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CgogICAgICAgICAgICAgICAgPCEtLSBUYWIgcGFuZWxzIC0tPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICA8IS0tUGFuZWwgMS0tPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgY2xhc3M9InRhYi1wYW5lIGZhZGUgaW4gc2hvdyBhY3RpdmUiCiAgICAgICAgICAgICAgICAgICAgaWQ9InBhbmVsMSIKICAgICAgICAgICAgICAgICAgICByb2xlPSJ0YWJwYW5lbCIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDwhLS1Cb2R5LS0+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSBtYi0xIj4KICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPG1kYi1pbnB1dCBzaXplPSJzbSIgaWNvbj0iZW52ZWxvcGUiIGxhYmVsPSJZb3VyIGVtYWlsIiB0eXBlPSJlbWFpbCIgLz4KCiAgICAgICAgICAgICAgICAgICAgICA8bWRiLWlucHV0IHNpemU9InNtIiBpY29uPSJsb2NrIiBsYWJlbD0iUGFzc3dvcmQiIHR5cGU9InBhc3N3b3JkIiAvPgoKICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8bWRiLWJ0biBpY29uPSJwYXBlci1wbGFuZSIgaWNvblJpZ2h0IGNvbG9yPSJpbmZvIj5Mb2cgaW48L21kYi1idG4+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8IS0tRm9vdGVyLS0+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIGRpc3BsYXktZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9wdGlvbnMgdGV4dC1jZW50ZXIgdGV4dC1tZC1yaWdodCBtdC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgTm90IGEgbWVtYmVyPwogICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJibHVlLXRleHQiPlNpZ24gVXA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yZ290CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImJsdWUtdGV4dCI+UGFzc3dvcmQ/PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLWluZm8gd2F2ZXMtZWZmZWN0cyBtbC1hdXRvIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICBDbG9zZQogICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8IS0tLy5QYW5lbCAxLS0+CgogICAgICAgICAgICAgICAgICA8IS0tUGFuZWwgMi0tPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWItcGFuZSBmYWRlIiBpZD0icGFuZWwyIiByb2xlPSJ0YWJwYW5lbCI+CiAgICAgICAgICAgICAgICAgICAgPCEtLUJvZHktLT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWZvcm0gZm9ybS1zbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZW52ZWxvcGUgcHJlZml4Ij48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImZvcm0xMyIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zbSIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybTEzIj5Zb3VyIGVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWZvcm0gZm9ybS1zbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtbG9jayBwcmVmaXgiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImZvcm0yNCIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zbSIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybTI0Ij5Zb3VyIHBhc3N3b3JkPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWZvcm0gZm9ybS1zbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtbG9jayBwcmVmaXgiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImZvcm0xNSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zbSIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybTE1Ij5SZXBlYXQgcGFzc3dvcmQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgZm9ybS1zbSBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1pbmZvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBTaWduIHVwCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zaWduLWluIG1sLTEiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8IS0tRm9vdGVyLS0+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9wdGlvbnMgdGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwdC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBBbHJlYWR5IGhhdmUgYW4gYWNjb3VudD8KICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iYmx1ZS10ZXh0Ij5Mb2cgSW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtaW5mbyB3YXZlcy1lZmZlY3QgbWwtYXV0byIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgQ2xvc2UKICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPCEtLS8uUGFuZWwgMi0tPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8IS0tLy5Db250ZW50LS0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0vTW9kYWw6IExvZ2luICYgUmVnaXN0ZXIgdGFicy0tPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0vU2Vjb25kIGNvbHVtbi0tPgogICAgICA8L2Rpdj4KICAgICAgPCEtLS9GaXJzdCByb3ctLT4KCiAgICAgIDwhLS1TZWNvbmQgcm93LS0+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPCEtLUZpcnN0IGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPG1kYi1idG4KICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgICAgQGNsaWNrPSJzaG93TW9kYWwyMSA9IHRydWUiCiAgICAgICAgICAgICAgaWNvbj0iZXllIgogICAgICAgICAgICAgIGljb25SaWdodAogICAgICAgICAgICAgID5MYXVuY2ggTW9kYWwgQ29udGFjdCBGb3JtPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogU3Vic2NyaXB0aW9uLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgY2FzY2FkaW5nLW1vZGFsIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgICAgIDwhLS1Db250ZW50LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIgbGlnaHQtYmx1ZSBkYXJrZW4tMyB3aGl0ZS10ZXh0Ij4KICAgICAgICAgICAgICAgIDxoNCBjbGFzcz4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhciBmYS1uZXdzcGFwZXIiPjwvaT4gU3Vic2NyaXB0aW9uIGZvcm0KICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImNsb3NlIHdhdmVzLWVmZmVjdCB3YXZlcy1saWdodCIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPCEtLUJvZHktLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5IG1iLTAiPgogICAgICAgICAgICAgICAgPG1kYi1pbnB1dCBzaXplPSJzbSIgaWNvbj0idXNlciIgbGFiZWw9IllvdXIgbmFtZSIgdHlwZT0idGV4dCIgLz4KCiAgICAgICAgICAgICAgICA8bWRiLWlucHV0IHNpemU9InNtIiBpY29uPSJlbnZlbG9wZSIgbGFiZWw9IllvdXIgZW1haWwiIHR5cGU9ImVtYWlsIiAvPgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIG10LTEtaGFsZiI+CiAgICAgICAgICAgICAgICAgIDxtZGItYnRuIGljb249ImNoZWNrIiBjb2xvcj0iaW5mbyIgaWNvblJpZ2h0PlN1Ym1pdDwvbWRiLWJ0bj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPCEtLS8uQ29udGVudC0tPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8IS0tL01vZGFsOiBTdWJzY3JpcHRpb24tLT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tL0ZpcnN0IGNvbHVtbi0tPgoKICAgICAgICA8IS0tU2Vjb25kIGNvbHVtbi0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPG1kYi1idG4KICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgICAgQGNsaWNrLm5hdGl2ZT0ic2hvd01vZGFsMjIgPSB0cnVlIgogICAgICAgICAgICAgIGljb249ImV5ZSIKICAgICAgICAgICAgICBpY29uUmlnaHQKICAgICAgICAgICAgICA+TGF1bmNoIE1vZGFsIExvZ2luIHdpdGggQXZhdGFyPC9tZGItYnRuCiAgICAgICAgICAgID4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDwhLS1Nb2RhbDogQXZhdGFyLS0+CiAgICAgICAgICA8ZGl2CiAgICAgICAgICAgIGNsYXNzPSJtb2RhbC1kaWFsb2cgbW9kYWwtc20gY2FzY2FkaW5nLW1vZGFsIG1vZGFsLWF2YXRhciIKICAgICAgICAgICAgcm9sZT0iZG9jdW1lbnQiCiAgICAgICAgICA+CiAgICAgICAgICAgIDwhLS1Db250ZW50LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgIDwhLS1IZWFkZXItLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vbWRib290c3RyYXAuY29tL2ltZy9QaG90b3MvQXZhdGFycy9pbWclMjAlMjgxJTI5LmpwZyIKICAgICAgICAgICAgICAgICAgY2xhc3M9InJvdW5kZWQtY2lyY2xlIGltZy1mbHVpZCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPCEtLUJvZHktLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5IHRleHQtY2VudGVyIG1iLTEiPgogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtdC0xIG1iLTIiPk1hcmlhIERvZTwvaDU+CgogICAgICAgICAgICAgICAgPG1kYi1pbnB1dCBzaXplPSJzbSIgbGFiZWw9IkVudGVyIHBhc3N3b3JkIiB0eXBlPSJwYXNzd29yZCIgLz4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBwdC00Ij4KICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1jeWFuIG10LTEiPgogICAgICAgICAgICAgICAgICAgIExvZ2luCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zaWduLWluIG1sLTEiPjwvaT4KICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0vLkNvbnRlbnQtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLS9Nb2RhbDogQXZhdGFyLS0+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLS9TZWNvbmQgY29sdW1uLS0+CiAgICAgIDwvZGl2PgogICAgICA8IS0tL1NlY29uZCByb3ctLT4KICAgIDwvc2VjdGlvbj4KICAgIDwhLS1TZWN0aW9uOiBGb3Jtcy0tPgogIDwvc2VjdGlvbj4KICA8IS0tIC9TRUNUSU9OOiBEZW1vLS0+CgogIDwhLS1TZWN0aW9uOiBEb2NzIGxpbmstLT4KICA8c2VjdGlvbiBjbGFzcz0icGItNCBwdC01Ij4KICAgIDwhLS1QYW5lbC0tPgogICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgIDxoMyBjbGFzcz0iY2FyZC1oZWFkZXIgcHJpbWFyeS1jb2xvciB3aGl0ZS10ZXh0Ij5GdWxsIGRvY3VtZW50YXRpb248L2gzPgogICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPgogICAgICAgICAgUmVhZCB0aGUgZnVsbCBkb2N1bWVudGF0aW9uIGZvciB0aGVzZSBjb21wb25lbnRzLgogICAgICAgIDwvcD4KICAgICAgICA8YQogICAgICAgICAgaHJlZj0iaHR0cHM6Ly9tZGJvb3RzdHJhcC5jb20vZG9jcy92dWUvbW9kYWxzL2Jhc2ljLyIKICAgICAgICAgIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIKICAgICAgICAgID5MZWFybiBtb3JlPC9hCiAgICAgICAgPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPCEtLS8uUGFuZWwtLT4KICA8L3NlY3Rpb24+CiAgPCEtLVNlY3Rpb246IERvY3MgbGluay0tPgo8L21kYi1jb250YWluZXI+Cg=="},null]}